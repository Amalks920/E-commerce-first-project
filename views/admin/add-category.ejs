
<section class="content-main">
    <div class="content-header">
        <div>
            <h2 class="content-title card-title"> Add Categories </h2>
            
        </div>
        <div>
            <input type="text" placeholder="Search Categories" class="form-control bg-white">
        </div>
    </div>
    

    
    <div class="card">
        <div class="card-body">
            <div class="row">
                <div class="col-md-3">
                    <form id="cat-form" action="/admin/category/add-category" method="post" enctype="multipart/form-data">
                        <p style="color: red;" id="err"><%=req.query.err %></p>
                        <div class="mb-4">
                            <label for="product_name" class="form-label">Category Name</label>
                            <input  type="text" id="category" minlength="3" max="30" name="productCategory"  placeholder="Type here" class="form-control input" id="category-name" />
                        </div>


                        <div class="mb-4">
                            <label for="product_name" class="form-label ">Image</label>

                            <input type="file"  name="images" placeholder="Type here" class="form-control input" id="product_name" multiple/>
                        </div>


                        <div class="mb-4">
                            <label class="form-label">Description</label>
                            <textarea  id="description" type="text" placeholder="Type here"  name="categoryDescription" class="form-control input"></textarea>
                        </div>
                        <div class="d-grid">
                            <button type="submit" class="btn btn-primary">Edit category</button>
                        </div>
                    </form>
                </div>
                <div class="col-md-9">
                    <div class="table-responsive">
                        <table class="table table-hover">
                            <thead>
                                <tr>
                                   
                                    <th>ID</th>
                                    <th>Name</th>
                                    <th>Description</th>
                                    <th>images</th>
                                </tr>
                            </thead>
                           
                            <tbody>
                                <% data.forEach(el=>{ %>
                                <tr>
                                    <td class="text-center">
                                       1
                                    </td>
                                    <td><%=el.productCategory -%></td>
                                    <td><%=el.categoryDescription -%></td>
                                    <td><img src="/images/uploads/<%=el.images[0]-%>" width="30" style="position: absolute;" alt=""></td>
                                </tr>
                                <% }) %>
                            </tbody>
                            
                        </table>
                    </div>
                </div> <!-- .col// -->
            </div> <!-- .row // -->
        </div> <!-- card body .// -->
    </div> <!-- card .// -->
   
</section> <!-- content-main end// -->


<!-- 
<script>
    const imagesInput = document.querySelector('input[type="file"]');
    const category=document.getElementById('category');
    const description=document.getElementById('description');
    const categoryForm=document.getElementById('cat-form')
    const err=document.getElementById('err')


    categoryForm.addEventListener('submit',function(event){
    let isValid=true;
      // Reset previous error messages
      imagesInput.classList.remove('is-invalid');
      category.classList.remove('is-invalid');
      description.classList.remove('is-invalid');

            // Perform validation for each field
      if (category.value.trim() === '' || !validateCatName(category.value.trim())) {
        isValid = false;
        category.classList.add('is-invalid');
      }


      if (description.value.trim() === '' || !validateDescription(description.value.trim())) {
          isValid = false;
          description.classList.add('is-invalid');
      }

      if (!validateFiles(imagesInput)) {
          isValid = false;
          imagesInput.classList.add('is-invalid');
      }
      
      if (imagesInput.files.length === 0) {
          isValid = false;
          imagesInput.classList.add('is-invalid');
      }

      if (!isValid) {
          event.preventDefault(); // Prevent form submission if validation fails
      }
      
  })


  const inputElements=document.querySelectorAll('.input');

  inputElements.forEach((element,index)=>{
    element.addEventListener('input',function () {
    err.style.display="none";

    })
  })



  function validateFiles(input) {
    const files = input.files;
    
    for (let i = 0; i < files.length; i++) {
        const file = files[i];
        console.log(file)
        const fileType = file.type;

        // Check if the file type is an image (you can add more image types as needed)
        if (fileType.startsWith('image/')) {
            // File is an image
            console.log(`File ${file.name} is an image.`);
            return true
        } else {
            // File is not an image
            console.log(`File ${file.name} is not an image.`);
            return false
        }
    }
}



function validateCatName(value){

    categoryRegExpPattern=/^[A-Z][A-Za-z\s0-9]{1,49}$/

    return categoryRegExpPattern.test(value)

}

function validateDescription(value) {
  // Define the regular expression pattern for descriptions
  const descriptionRegExpPattern = /^[A-Za-z0-9\s.,!?'"()\-]{3,100}$/;

  // Test the value against the regular expression
  return descriptionRegExpPattern.test(value);
}


</script> -->

<script src="/javascript/categoryValidation.js"></script>